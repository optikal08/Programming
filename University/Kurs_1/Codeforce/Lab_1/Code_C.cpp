#include <cmath>
#include <iostream>
using namespace std;

// Евлампий наводит порядок. Среди прочих вещей у него есть две довольно большие коробки. Он хочет, чтобы эти коробки занимали как можно меньше места, и пытается вложить одну в другую. При этом Евлампий хочет, чтобы стороны коробок были параллельны друг другу. Ваша задача — определить, возможно ли это.

// Считайте, что Евлампий может поворачивать коробки как угодно, соблюдая требование параллельности сторон. Также считайте, что одна коробка может быть вложена в другую только в том случае, если в некотором допустимом положении любой линейный размер вложенной коробки строго меньше соответствующего линейного размера внешней коробки.

// Входные данные
// В первой строке содержится три целых числа через пробел — длина, ширина и высота первой коробки.

// Во второй строке содержится три целых числа через пробел — длина, ширина и высота второй коробки.

// Все числа положительны и не превосходят 1000.

// Выходные данные
// Выведите в качестве ответа 0, если ни одну из коробок нельзя вложить в другую, 1, если первую получится вложить во вторую, и 2, если вторую получится вложить в первую.

int main() {
    int a1, b1, h1, a2, b2, h2;
    int z; // пременная для замены сторон
    cin >> a1 >> b1 >> h1 >> a2 >> b2 >> h2;
    if (a1 < a2 && b1 < b2 && h1 < h2) { // проверили изначально
        cout << 1;
    } else {
        z = a1;
        a1 = b1;
        b1 = z;
        if (a1 < a2 && b1 < b2 && h1 < h2) { // повернули боком
            cout << 1;
        } else {
            z = b1;
            b1 = h1;
            h1 = z;
            if (a1 < a2 && b1 < b2 && h1 < h2) { // перевернули на бок
                cout << 1;
            } else {
                z = a1;
                a1 = b1;
                b1 = z;
                if (a1 < a2 && b1 < b2 && h1 < h2) { // повернули боком
                    cout << 1;
                } else {
                    z = a1;
                    a1 = h1;
                    h1 = z;
                    if (a1 < a2 && b1 < b2 && h1 < h2) { // перевернули на высоту
                        cout << 1;
                    } else {
                        z = a1;
                        a1 = b1;
                        b1 = z;
                        if (a1 < a2 && b1 < b2 && h1 < h2) { // повернули боком
                            cout << 1;
                        } else if (a1 > a2 && b1 > b2 && h1 > h2) { // проверили изначально
                            cout << 2;
                        } else {
                            z = a1;
                            a1 = b1;
                            b1 = z;
                            if (a1 > a2 && b1 > b2 && h1 > h2) { // повернули боком
                                cout << 2;
                            } else {
                                z = b1;
                                b1 = h1;
                                h1 = z;
                                if (a1 > a2 && b1 > b2 && h1 > h2) { // перевернули на бок
                                    cout << 2;
                                } else {
                                    z = a1;
                                    a1 = b1;
                                    b1 = z;
                                    if (a1 > a2 && b1 > b2 && h1 > h2) { // повернули боком
                                        cout << 2;
                                    } else {
                                        z = a1;
                                        a1 = h1;
                                        h1 = z;
                                        if (a1 > a2 && b1 > b2 && h1 > h2) { // перевернули на высоту
                                            cout << 2;
                                        } else {
                                            z = a1;
                                            a1 = b1;
                                            b1 = z;
                                            if (a1 > a2 && b1 > b2 && h1 > h2) { // повернули боком
                                                cout << 2;
                                            } else {
                                                cout << 0;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
